<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;
use DoctrineExtensions\Query\Mysql\Acos;
use DoctrineExtensions\Query\Mysql\Cos;
use DoctrineExtensions\Query\Mysql\Sin;
use DoctrineExtensions\Query\Mysql\Radians;

/**
 * BlogPostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpaceRepository extends EntityRepository
{
    public function findMySpaces($user)
    {
        $expr = new Expr();
        $qb = $this->createQueryBuilder('space')
            ->where($expr->eq('space.user', ':user'))
            ->setParameter('user', $user);
        return $qb;

    }

    public function searchSpaces($query)
    {
        $expr = new Expr();
        $fields = [];
        $fields[] = "space";
        if (isset($query['lat']) && isset($query['lng'])) {
            $lat = $query['lat'];
            $lng = $query['lng'];
            $fields[] = "( 3959 * acos( cos( radians('$lat') ) * cos( radians( location.lat ) ) * cos( radians( location.lng ) - radians('$lng') ) + sin( radians('$lat') ) * sin( radians( location.lat ) ) ) ) AS distance";
        }
        $qb = $this->_em->createQueryBuilder()
            ->select($fields)
            ->from($this->_entityName, 'space', null)
            ->join('space.location', 'location')
            ->join('space.price', 'price')
            ->join('space.dateBooking', 'dateBooking')
            ->leftJoin('space.features', 'features');
        if (isset($query['lat']) && isset($query['lng'])) {
            $qb->orderBy('distance', 'ASC');
        }

//        if (isset($query['from']) && $query['from'] != '') {
//            $fromDate = \DateTime::createFromFormat('m/d/Y', $query['from']);
//            $qb->andWhere('dateBooking.dateFrom >= :from')
//                ->setParameter('from', $fromDate->format('Y-m-d'));
//        }
//        if (isset($query['to']) && $query['to'] != '') {
//            $toDate = \DateTime::createFromFormat('m/d/Y', $query['to']);
//            $qb->andWhere('dateBooking.dateTo <= :to')
//                ->setParameter('to', $toDate->format('Y-m-d'));
//        }
//        if (isset($query['price']) && $query['price'] != '') {
//            $price = explode(';',$query['price']);
//            $priceFrom = $price[0];
//            $priceTo = $price[1];
//            $qb->andWhere('price.daily >= :priceFrom AND price.daily <= :priceTo')
//                ->setParameter('priceFrom', $priceFrom)
//                ->setParameter('priceTo', $priceTo);
//        }
//        if (isset($query['square']) && $query['square'] != '') {
//            $square = explode(';',$query['square']);
//            $squareFrom = $square[0];
//            $squareTo = $square[1];
//            $qb->andWhere('location.squareFeet >= :squareFrom AND location.squareFeet <= :squareTo')
//                ->setParameter('squareFrom', $squareFrom)
//                ->setParameter('squareTo', $squareTo);
//        }
        return $qb;

    }
//    public function findJobListing($positionId,$query){
//        $em = $this->container->get('doctrine')->getManager();
//        $qb = $em->createQueryBuilder();
//        $expr = new Expr();
//        $status = strtoupper($query['status']);
//        $qb->select('listing')
//            ->from('AppBundle:JobBoard\Listing\JobListing','listing')
//            ->join('listing.creator', 'creator')
//            ->where($expr->eq('creator', ':positionId'))
//            ->andWhere($expr->eq('listing.status', ':status'))
//            ->setParameter('status', $status)
//            ->setParameter('positionId', $positionId);
//        if(isset($query['title']) && $query['title'] != ''){
//            $qb->andWhere($qb->expr()->like('listing.title', $expr->literal("%{$query['title']}%")));
//        }
//        if (isset($query['from']) && $query['from'] != '') {
//            $fromDate = \DateTime::createFromFormat('m/d/Y', $query['from']);
//            $qb->andWhere('listing.createdDate >= :from')
//                ->setParameter('from', $fromDate->format('Y-m-d'));
//        }
//        if (isset($query['to']) && $query['to'] != '') {
//            $toDate = \DateTime::createFromFormat('m/d/Y', $query['to']);
//            $qb->andWhere('listing.createdDate <= :to')
//                ->setParameter('to', $toDate->format('Y-m-d'));
//        }
//        if (isset($query['app-type']) && $query['app-type'] != '') {
//            $qb->andWhere('listing.visibility = :visibility')
//                ->setParameter('visibility', $query['app-type']);
//        }
//        if (isset($query['interview-required']) && $query['interview-required'] != '') {
//            $value = $query['interview-required'] == 'yes' ? true:false;
//            $qb->andWhere('listing.interviewRequired = :interviewRequired')
//                ->setParameter('interviewRequired', $value);
//        }
//        if (isset($query['introduction-required']) && $query['introduction-required'] != '') {
//            $value = $query['introduction-required'] == 'yes' ? true:false;
//            $qb->andWhere('listing.interviewRequired = :introductionRequired')
//                ->setParameter('introductionRequired', $value);
//        }
//        return $qb;
//    }
}
